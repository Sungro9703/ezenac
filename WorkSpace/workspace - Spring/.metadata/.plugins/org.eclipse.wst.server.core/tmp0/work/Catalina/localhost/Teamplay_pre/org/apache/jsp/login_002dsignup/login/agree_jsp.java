/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-25 06:51:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.login_002dsignup.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class agree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>약관동의</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	padding: 50px;\r\n");
      out.write("	margin: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".h2 {\r\n");
      out.write("	padding: 0 0 15px 20px;\r\n");
      out.write("\r\n");
      out.write("	color: #222;\r\n");
      out.write("	line-height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".h3{\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".agree {\r\n");
      out.write("	border: 1px solid #e6e6e6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".agree>div {\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("	height: 124px;\r\n");
      out.write("	padding: 24px 19px;\r\n");
      out.write("	\r\n");
      out.write("	color: #555;\r\n");
      out.write("	line-height: 16px;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write(".agree>p {\r\n");
      out.write("	height: 43px;\r\n");
      out.write("	background: #f8f8f8;\r\n");
      out.write("	border-top: 1px solid #e6e6e6;\r\n");
      out.write("	line-height: 43px;\r\n");
      out.write("	\r\n");
      out.write("	color: #222;\r\n");
      out.write("	text-indent: 19px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, form,\r\n");
      out.write("	fieldset, p, button, table, th, td, pre {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body, div, dl, dt, dd, h1, h2, h3, h4, h5, h6, form, fieldset, p, th, td,\r\n");
      out.write("	input, textarea, select, button, pre, a {\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	color: #222;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("textarea {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("select, input, img, button {\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul, ol {\r\n");
      out.write("	list-style-type: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hide, legend, hr, caption span {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: -3000%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("em, address {\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("	border-spacing: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	color: #666;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a:focus, a:hover {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("fieldset, img, button {\r\n");
      out.write("	border: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=text]::-ms-clear {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("select {\r\n");
      out.write("	padding: 0 0 0 5px;\r\n");
      out.write("	height: 38px;\r\n");
      out.write("	border: 1px solid #e3e3e3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("textarea\r\n");
      out.write("	{\r\n");
      out.write("	text-indent: 4px;\r\n");
      out.write("	border: 1px solid #ccc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("input[type=\"radio\"] {\r\n");
      out.write("	vertical-align: text-bottom;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".clear {\r\n");
      out.write("	zoom: 1;\r\n");
      out.write("	clear: both;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".clear:after {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("	display: block;\r\n");
      out.write("	clear: both;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".skip {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	top: -100px;\r\n");
      out.write("	z-index: 1000;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 60px;\r\n");
      out.write("	line-height: 60px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	transition: all 0.5s;\r\n");
      out.write("	background: #666;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".skip:focus {\r\n");
      out.write("	top: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#next_btn{\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  border: none;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  width: 130px;\r\n");
      out.write("  background-color:#9bb7d6;\r\n");
      out.write("  margin-bottom: 30px;\r\n");
      out.write("  color: white;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  float:right;\r\n");
      out.write("  border-radius: 5px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<h2 class=\"h2\">홈페이지 이용약관</h2>\r\n");
      out.write("	<h2 style=\"text-align: center;\">1.약관동의</h2><br>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"agree\">\r\n");
      out.write("		\r\n");
      out.write("	<h3 class=\"h3\">이용약관동의</h3>\r\n");
      out.write("		<div tabindex=\"0\">\r\n");
      out.write("		이용약관동의\r\n");
      out.write("		</div>\r\n");
      out.write("		<p>\r\n");
      out.write("			<input type=\"checkbox\" id=\"chk1\"><label for=\"chk1\">홈페이지\r\n");
      out.write("				이용약관에 동의합니다.(동의하지 않을경우 가입되지 않습니다.)</label>\r\n");
      out.write("		</p><br>\r\n");
      out.write("\r\n");
      out.write("		<h3 class=\"h3\">개인정보 처리방침</h3>\r\n");
      out.write("		<div tabindex=\"0\">\r\n");
      out.write("		개인정보 처리방침\r\n");
      out.write("		</div>\r\n");
      out.write("		<p>\r\n");
      out.write("			<input type=\"checkbox\" id=\"chk2\"><label for=\"chk2\">홈페이지\r\n");
      out.write("				이용약관에 동의합니다.(동의하지 않을경우 가입되지 않습니다.)</label>\r\n");
      out.write("		</p><br>\r\n");
      out.write("		\r\n");
      out.write("		<h3 class=\"h3\">위치기반 서비스 이용약관</h3>\r\n");
      out.write("		<div tabindex=\"0\">\r\n");
      out.write("         위치기반 서비스 이용약관\r\n");
      out.write("		</div>\r\n");
      out.write("		<p>\r\n");
      out.write("			<input type=\"checkbox\" id=\"chk3\"><label for=\"chk3\">홈페이지\r\n");
      out.write("				이용약관에 동의합니다.(동의하지 않을경우 가입되지 않습니다.)</label>\r\n");
      out.write("		</p>\r\n");
      out.write("		\r\n");
      out.write("		<p>\r\n");
      out.write("			<input type=\"checkbox\" id=\"chk3\"><label for=\"chk3\">\r\n");
      out.write("				위 약관에 모두 동의 하십니까?</label>\r\n");
      out.write("			<input type=\"button\" id=\"next_btn\" value=\"다음단계로\" onClick=\"location.href='signup.jsp'\"/>\r\n");
      out.write("		</p><br>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
