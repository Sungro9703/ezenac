1. 자료구조란 (Data Structure)
    1) 프로그램에서 사용할 많은 데이터를 메모리 상에서 관리하는 여러 구현방법들.
    2) 효율적인 자료구조가 성능 좋은 알고리즘의 기반이 됨
    3) 자료의 효율적인 관리는 프로그램의 수행속도와 밀접한 관련이 있음

2. 자료구조 종류
    1) 한 줄로 자료를 관리하기 (선형 자료구조)
        - 배열(ArrayList)
            - 자료의 물리적 위치와 논리적 위치가 같음
            - 동일한 데이터 타입을 순서에 따라 관리하는 자료구조
            - 요소의 추가와 제거 시 다른 요소들의 이동이 필요함
            - 장점: i번째 요소를 찾는 인덱스 연산이 빠름
            - jdk 클래스: ArrayList, Vector
        - 연결 리스트 (LinkedList)
            - 자료가 추가될 때 자료는 링크로 연결됨
            - 자료는 링크로 연결됨
                - 동일한 데이터 타입을 순서에 따라 관리하는 자료 구조
                - 자료를 저장하는 노드에는 자료와 다음 요소를 가리키는 링크(포인트)가 있음
            - 자료의 물리적 위치와 논리적 위치가 다를 수 있음
            - 연결 리스트의 i번째 요소를 찾는 데 걸리는 시간은 요소의 개수에 비례
            - jdk 클래스: LinkedList
            - 리스트에 자료 추가하기
            - 리스트에 자료 삭제하기
        - 스택 (Stack)
            - 가장 나중에 입력된 자료가 가장 먼저 출력되는 자료구조 (Last In First Out)
            - ex) 택배 상자가 쌓여있는 모양
            - 맨 마지막 위치(top)에서만 자료를 추가, 삭제 (중간의 자료를 꺼낼 수 없음)
            - 가장 최근의 자료를 찾아오거나 게임에서 히스토리를 유지하고 이를 부를 때 사용
            - jdk 클래스: Stack
        - 큐 (Queue)
            - 맨 앞(front)에서 자료를 꺼내거나 삭제하고,
              맨 뒤에서(rear)에서 자료를 추가
            - First In First Out 구조
            - 일상생활에서 일렬로 줄 서있는 모양
            - 순차적으로 입력된 자료를 순서대로 처리하는데 많이 사용되는 자료구조