1. 클라우드 컴퓨팅
    1) 개념 : 자신의 컴퓨터가 아닌 인터넷에 연결된 컴퓨터 자원을 이용하는 것
              (네트워크, DB, 서버, 스토리지, 애플리케이션)
    2) 컴퓨팅 자원을 소유하는 것이 아니라 공유

2. 클라우드 컴퓨팅의 변천사
    1) 그리드 컴퓨팅
    2) 유틸리티 컴퓨팅
    3) SaaS
    4) 클라우드 컴퓨팅

3. 클라우드 컴퓨팅 특징
    1) 민첩성
    2) 탄력성
    3) 비용절감
    4) 글로벌 배포

4. 클라우드 컴퓨팅 서비스 모델
    1) IaaS (Infrastructure as a Service)
        - CPU, 네트워크, 스토리지 등의 컴퓨팅 자원을 인터넷으로 제공하는 형태
    2) PaaS (Platform as a Service)
        - 애플리케이션을 구동하는 플랫폼을 서비스로 제공하는 형태
        - 컴퓨터 자원에 os, 미들웨어와 같은 더 고도화된 기능을 함께 제공
    3) SaaS (Software as a Service)
        - 소프트웨어를 서비스로 제공하는 형태
    4) FaaS (Function as a Service)
        - 사용자가 함수만 만들어 올려두면 구동에 필요한 빌드, 실행, 모니터링 등의
          과정을 자동화해 제공하는 방식

5. 클라우드 컴퓨팅 종류
    1) 퍼블릭 클라우드
        - 불특정 다수의 개인이나 기업에 컴퓨팅 자원을 빌려주는 형태
        - 클라우드 컴퓨팅에서의 클라우드는 일반적으로 퍼블릭 클라우드를 의미
        - 예) 아마존(AWS), 구글(GCP), 마이크로소프트(애저)
    2) 프라이빗 클라우드
        - 자사 인프라에 클라우드 컴퓨팅 개념을 도입해 데이터센터를 고도화

6. 클라우드 컴퓨팅의 핵심기술
    1) 가상화 기술
        - 여러 하드웨어 장비를 하나로 묶거나
          하나의 커다란 장비를 여러대의 작은 장비인 것처럼 나눌 수 있음
        - 물리적인 컴퓨팅 자원을 최대한 많은 사용자에게 효율적으로 할당
        - 서버 가상화
            - CPU, 메모리, 네트워크, 스토리지를 포함
            - 가상화된 서버 구조에서는 하이퍼바이저라는 가상화 소프트웨어를 통해
              가상머신을 관리
            
    2) 컨테이너 기술
        - 가상머신보다 가볍고 빠르게 동작할 수 있음
        - 프로그램을 다른 구동 환경에서 실행하더라도 안정적으로 실행하기 위해 고안
        - 최근 가상머신 기반의 가상화를 대체
        - 애플리케이션
            운영체제A
            가상화 소프트웨어
            하드웨어
        - 도커, 쿠버네티스

7. 클라우드 네이티브
    1) 클라우드 컴퓨팅 장점을 활용하는 애플리케이션 개발 및 운영 방식을 의미
    2) 4요소
        - 컨테이너
            - 도커
                - 컨테이너 기반의 오픈소스 가상화 플랫폼
                - 이미지 : 컨테이너 구동에 필요한 실행 파일과 관련된 라이브러리, 설정값 등을
                           포함한 패키지
                - 컨테이너 : 이미지를 실행한 상태
            - 쿠버네티스
                - 컨테이너를 쉽고 빠르게 자동으로 관리해주는 오픈소스 플랫폼
        - 마이크로 서비스 아키텍처(MSA)
            - 모노리틱 아키텍처 (전통적인 방식)
            - 애플리케이션을 기능별로 잘게 나눠 서비스로 제작
            - 서비스 사이에서는 HTTP API 호출을 통해 필요한 기능을 불러 쓰는 방식을 도입
            - 단점
                - 장애 발생 시 여러 서비스 중 어느 서비스에서 발생한 문제인지
                  찾아내는 과정이 추가로 필요
                - DB가 분산되어 있어 여러 DB에 흩어진 데이터 관리 어려움
        - 데브옵스 (DevOps)
            - Development + Operations
            - 클라우드 환경에서느 개발과 운영의 경계가 모호해졌으며
              개발자가 직접 운영하는 것이 가능해짐
            - 빠르게 개발 사이클을 가져가는 애자일 방식이 각광받음
        - 지속적인 통합/배포
            - 코딩, 빌드, 테스트, 배포
            - CI : 소프트웨어 개발자를 위한 자동화 프로세스
            - CD : 운영자 과정을 위한 자동화 프로세스