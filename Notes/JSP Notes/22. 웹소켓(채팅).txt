1. 네트워크
    1) 종단 시스템 (end system) : 송수신 주체
    2) 프로토콜 : 이종 시스템을 연결하기 위한 규약
    3) 통신을 목적으로 실제 물리적으로 선으로 연결되어 있거나 무선으로 연결됨

2. IP 주소 (Address)
    1) 송수신 위치정보
    2) 보통 IPv4의 주소를 사용하며 주소 부족을 위해 IPv6 개발됨

3. 네트워크 소켓(Socket)
    1) 네트워크는 소켓으로 관리
    2) 소켓이라는 단일한 인터페이스로 묶어서 사용
    3) 네트워크를 초기화하여 다양한 통신 수단을 사용
    4) 운영체제의 파일 시스템과 연동하여 구성
    5) 상위에서 보면 파일처럼 다루어지게 됨

    6) 소켓은 네트워크에서 동작하는 프로그램의 종착점(endpoint)
    7) IP 주소와 포트번호로 이루어져 있음
    8) 서버와 클라이언트가 양방향 통신을 할 수 있게 해주는 소프트웨어 장치
        - 둘 다 소켓을 생성하여 연결해야 함

4. 소켓 통신 절차 (자바)

    <서버>                                  <클라이언트>
    ServerSocket()
        ↓
        ↓클라이언트 접속 대기
        ↓                  연결요청 
      accpet()←  ←  ←  ←  ←  ←  ←  ←  ←  ←  ← Socket()
        ↓                                        ↓
        ↓                                        ↓
    I/O 스트림 생성                         I/O 스트림 생성
        ↓                                        ↓
        ↓                                        ↓
        ↓                요청 전송                ↓
      read()   ←  ←  ←  ←  ←  ←  ←  ←  ←  ←  ←  write()
        ↓                                         ↓
        ↓                                         ↓
        ↓               응답 전송                  ↓
     write()   →  →  →  →  →  →  →  →  →  →  →  read()
        ↓                                         ↓
        ↓                                         ↓
        ↓                연결 종료                 ↓
      read()   ←  ←  ←  ←  ←  ←  ←  ←  ←  ←  ←  close()
        ↓
        ↓
     close()

	1) 서버에서 서보용 소켓(ServerSocket)을 생성하고,
	   클라이언트가 접속하기를 기다림
	2) 클라이언트가 소켓(Socket)을 생성하여 서버로 연결 요청
	3) 서버가 접속을 허가(accpet)함
	4) 서버와 클라이언트는 각각 통신을 위한 I/O 스트림 생성
	5) 스트림 통해 서버와 클라이언트가 통신(write → read)함
	6) 클라이언트가 모든 작업 마친 후 소켓 종료(close)
	7) 서버는 새로운 클라이언트의 접속을 위해 대기하거나 종료할 수 있음

5. 웹소켓
	1) 웹 환경은 클라이언트의 요청을 받으면 응답 후 바로 연결을 종료하는 비연결 동기 소켓 방식
	2) 웹소켓은 클라이언트 요청에 응답한 후에도 연결을 그대로 유지하는 연결 지향 방식
		- 앞서 복잡한 톡신절차를 간단히 구현할 수 있는 장치 제공
			- @ServerEndPoint
				- 웹소켓 버서의 요청명을 지정
				- 해당 요청명으로 접속하는 클라이언트를 이 클래스가 처리
			- @OnOpen
				- 클라이언트가 접속할 때 실행할 메서드 정의
			- @OnMessage
				- 클라이언트로부터 메시지를 받을 때 실행할 메서드 정의
			- @OnClose
				- 클라이언트가 접속을 종료할 때 실행할 메서드 정의
			- @OnError
				- 에러가 발생했을 때 실행할 메서드 정의

6. 구현
	1) 채팅 서버 구현
	2) 채팅 클라이언트 구현
		- 채팅 참여 화면
		- 채팅 