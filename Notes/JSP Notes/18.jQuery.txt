1.주요 개념
    1) 화면의 동적 기능을 자바스크립트보다 쉽고 편리하게 개발할 수 있게 해주는 JS 라이브러리
    2) 특징
        - css 선택자를 사용해 각 HTML 태그에 접근해서 작업
        - 메서드 체인 방식으로 수행하므로 여러 기능을 한줄로 수행 가능

2. 제이쿼리 Ajax 기능
    1) Asynchronous javascript and XML
        - 비동기 통신(클라이언트와 서버 간)으로 데이터를 주고 받기 위한 기술
        - XML이나 JSON 데이터를 주고 받는 기술. 요즘은 JSON을 주로 사용
        - 웹페이지 전체(UI + data)가 아닌 일부(data)만 업테이트 가능
    2) 사용 형식
        $.ajax({
            type: 'post' 또는 'get',
            url: "요청 URL",
            dataType: "전송받을 데이터 타입",
            daat: "서버로 전송할 데이터"
            success: function() {
                    //정상요청, 서버로부터 응답이 도착하면 호출될 함수
            },
            error: function() {
                    // 오류 발생 시 처리
            },
            complete: function() {
                    // 작업 완료 후 처리
            }
        })

3. 제이쿼리에서 JSON 사용하기
    1) Java Script Object Notation
        - 자바스크립트 객체 표기법
    2) {속성명1:속성값1, 속성명2:속성값2, ...}
        [{속성명1:속성값1, 속성명2:속성값2, ...}, {속성명1:속성값1, 속성명2:속성값2, ...}] //객체 배열
        {키1:{속성명1:속성값1, 속성명2:속성값2, ...}, 키2:{속성명1:속성값1, 속성명2:속성값2, ...}} //Map
    3) name/value 쌍으로 이루어진 데이터 객체를 전달하기 위해
       인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 데이터 형식
    4) 비동기 브라우저/서버 통신 Ajax)을 위해 XML을 대체하는 데이터 전속형식
    5) 프로그래밍 언어나 플랫폼에 독립적이어서 쉽게 사용 가능

    6) JS 객체를 서버로 전송하려면 직렬화가 필요
        - 문자열로 변환
       서버가 보낸 데이터(JSON 문자열)를 JS 객체로 변환할 때 역직렬화 필요
        - 문자열 → JS 객체로 변환


        {name: "kim", age: 30}  -----------> '{"name": "kim", "age":30}'
                
                JS객체           <-----------           String