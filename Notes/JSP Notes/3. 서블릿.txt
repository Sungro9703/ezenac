1. 서블릿 특징
    1) 기존의 정적인 웹 프로그래밍의 문제점을 보완하여 동적인 여러가지 기능을 제공
    2) 스레드 방식으로 실행
    3) 자바로 만들어져 자바의 특징(OOP)을 가짐
    4) 컨테이너에서 실행됨
    5) 웹 브라우너에서 요청 시 기능을 수행

2. 서블릿 API 구조
    1) Servlet          ServletConfig   : 인터페이스

            GenericServlet : 추상클래스
            HttpServlet

    2) HttpServlet
        - GenericServlet을 상속받아 HTTP 프로토콜을 사용하는
          웹 브라우저에서 서블릿 기능 수행
        - 웹 브라우저 기반 서비스를 제공하는 서블릿을 만들 때 상속받아 사용함
        - 요청 시 service()가 호출되면서 요청 방식에 따라 doGet()이나 doPost()가
          차례대로 호출됨

    3) 서블릿 생명주기(Life Cycle) 메서드
        - 서블릿 실행 단게마다 호출되어 기능을 수행하는 콜백 메서드
            - init()
                - 초기화
                - 서블릿 요청 시 맨 처음 한번만 호출됨
                - 생략 가능
            - doGet(), doPost()
                - 서블릿 요청 시 매번 호출됨
                - 실제로 클라이언트가 요청하는 작업을 수행
                - 반드시 구현해야 함
            - destroy()
                - 서블릿이 메모리에서 소멸될 때 호출
                - 마무리 작업 주로 수행
                - 생략 가능

3. 서블릿 매핑 방법
    1) 각 프로젝트에 있는 web.xml에서 설정
    2) <servlet> 태그와 <servlet-mapping> 태그를 이용
    3) 여러개의 서블릿 매핑시에는 <servlet>태그를 먼저 정의하고
       <servlet-mapping> 태그를 정의

4. 서블릿 매핑하기
    1) http://주소:포트번호/프로젝트명/패키지명이 포함된 클래스명
    
    2)서블릿 클래스에 대응하는 서플릿 매핑 이름으로 요청

    3)http://주소:포트번호/프로젝트명(컨텍스트 이름)/서블릿매핑이름

5. 애너테이션을 이용한 서블릿 매핑
    1) web.xml에 여러 서블릿 매칭 설정 시 복잡해짐
    2) 서블릿 클래스에 직접 애너테이션을 설정하면 가독성이 좋아짐
    3) @WebServlet을 이용해 서블릿 매핑을 구현
        - @WebServlet("/서블릿매핑이름)