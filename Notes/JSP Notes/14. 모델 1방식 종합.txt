1. 요약
    1) DB와 연동하여 data를 입력, 수정, 삭제, 조회할 수 있는 모델 1방식
       회원제 게시판 제작
    2) 폼값 처리에는 내장 객체 사용
       로그인은 session 영역 사용
    3) 목록 보기
       글쓰기
       상세 보기
       수정하기
       삭제하기

2. 구상
    1) 회원제 게시판 프로세스
              ↓          ←               ←              ←         ←
                                                                   ↑ 
        목록보기화면 -------------> 글쓰기 화면 ---------------> 글쓰기 처리
        (list.jsp)    글쓰기 클릭   (write.jsp)                (writeProcess.jsp)

            ↓ 제목 클릭                 ↓

        상세보기화면 -------------> 수정하기화면 ---------------> 수정 처리
        (view.jsp)                  (edit.jsp)   작성완료 클릭   (editProcess.jsp)
                                                                    ↓        
            ↓ 삭제 클릭   ←       ←         ←         ←       ←     ←            

        삭제 처리
        (deleteProcess.jsp)

        - 비회원 상태: 목록보기, 상세보기
        - 회원 상태: 글쓰기, 수정하기, 삭제하기
        -페이지 이동
            - 글쓰기 후: 목록으로 이동
            - 수정 후: 상세보기로 이동
            - 삭제 후: 목록으로 이동

3. 테이블 및 시퀀스 생성
    1) 게시판은 작성한 게시물을 DB에 저정한 후 관리
    2) DB에는 회원정보 저장할 테이블, 게시물을 저장할 테이블 생성
        - board
            - 사용자가 입력한 게시물 저장
            - 기본키로 사용되는 컬럼(num)
                - 시퀀스를 통해 부여되는 순번을 입력하게 됨
                    - sequence: 순차적으로 증가하는 순번을 생성해
                                중복되지 않는 정수값을 반환하는 DB 객체

4. 모델1 구조와 모델2 구조 (MVC 패턴)
    1) MVC 패턴
        - 웹 애플리케이션은 사용자의 요청을 받아 처리한 후 응답하는 구조
        - Model, View, Controller
            - 데이터 처리를 담당하는 모델
            - 화면 출력을 담당하는 뷰
            - 이 둘을 제어하는 컨트롤러
        - 소프트웨어 개발 방법론의 일종
    2) 모델 1 방식
        - 개발 속도 빠름
        - 배우기 쉬움
        - 코드가 복잡해지고 유지보수가 어려움
    3) 모델 2 방식
        - 모델, 뷰, 컨트롤러가 각자의 역할 수행
        - 업무 분담 명확해지고 코드가 간결해짐 → 유지보수도 쉬워짐
        - 개발기간이 길어질 수 있으므로 작은 프로젝트에는 부적합