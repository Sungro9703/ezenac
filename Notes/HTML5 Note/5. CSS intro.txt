1. CSS (Cascading Style Sheets)
    1) HTML 문서를 시각적으로 꾸미는 역할
    2) 한번 작성해 여러 HTML 페이지에서 재사용 가능
    3) CSS 파일만 변경해도 해당 CSS를 적용한 모든 웹페이지 요소가 자동으로 업데이트 됨

2. CSS 적용하기
    1) 간단하게 스타일을 적용하는 방법
        - <style>
            <!-- CSS 코드 -->  
          </style> 태그 사용

    2) 인라인 방식
      - 요소의 style 속성에 직접 스타일을 작성하는 방식 (선택자 없음)

    3) 외부 CSS 파일 적용하는 방법
        -  
            <link rel="stylesheet" href="./css/main.css" />

3. CSS 기본 문법
    1)          스타일의 종류 (Property)
                ----
        선택자 { 속성: 값;}
        ------
        스타일(CSS)을 적용할 대상(Selector)
    
    2) 주석 (ctrl + /) : /* 설명 작성 */

4. CSS 선택자 (Selector) - 기본
    1) HTML에 스타일을 적용할 때 HTML 요소를 지정하는 역할을 함
    2) 전체 선택자 (universer selector)
        - 모든 요소 선택
        - 특정 태그 대신 * 기호를 사용함
        - <style>
            *{
                color: red;
            }
        </style>

    3) 유형(태그) 선택자 (type selector)
        - 특정 태그를 지정해 작성하는 방식
            - 지정된 태그를 가지는 요소를 선택
        - <style>
            태그유형{
                color: red;
            }
        </style>

    4) 아이디 선택자 (ID selector)
        - HTML id 속성의 값이 OOO인 요소 선택
        - 아이디로 요소를 식별해주는 선택자
        - 모든 태그 요소 중에 특정 아이디 하나를 선택할 때 사용
        - 아이디는 중복되지 않는 고유한 값이어야 함
        - <p id = "아이디" > 텍스트 </p>
        - <style>
            #아이디 {
                color: red;
            }
        </style>
        - #을 아이디 앞에 붙여야함

    5) 클래스 선택자
        - HTML class 속성의 값이 OOO인 요소 선택
        - 클래스는 아이디와 비슷한 기능을 하지만,
          여러 태그를 하나의 클래스로 묶을 수 있고
          태그 하나에 여러 클래스 이름을 붙일 수 있음 (하나 이상 지정)
        - <p id = "클래스" > 텍스트 </p>

        - <style>
            .클래스{
                color: red;
            }
        </style>
        - .을 클래스 앞에 붙여야함

    6) 복합 선택자 (combibator selector)
        - 선택자 OOO와 XXX를 동시에 만족하는 요소 선택
        - 부모와 자식 태그가 복합적으로 쓰임
        - 서로의 관계와 위치를 유용하게 결합하는 방식을 제공
        - 일치 선택자 (Basic combibator)
            - 선택자를 동시에 만족하는 요소 선택
        - 자식 선택자 (Child combibator)
            - 선택자 OOO의 자식 요소 XXX를 선택
            - 선택자의 자식 요소 선택
            - OOO > XXX

        - 하위(후손) 선택자 (Descendant combibator)
            - 선택자 OOO의 하위 요소 XXX 선택
            - 선택자의 하위 요소 선택
            - '띄어쓰기'가 선택자의 기호
            - OOO XXX

        - 인접 형제 선택자 (Adjacent Sibling combibator)
            - 선택자 OOO의 다음 형제 요소 XXX 하나를 선택
            - 선택자의 다음 형제 요소 하나를 선택
            - OOO + XXX

        - 일반 형제 선택자 (General Sibling combibator)
            - 선택자 OOO의 다음 형제 요소 XXX 모두를 선택
            - 선택자의 다음 형제 요소 모두를 선택
            - OOO ~ XXX

5. 가상 클래스 선택자 (Pseudo-Class Selectors)
    1) 선택한 요소가 특별한 상태여야 만족할 수 있음 
    2) 구분 - 동적 가상 클래스, 구조적 가상 클래스

    3) 동적 가상 클래스 (Dynamic Pseudo Classes)
        - 어떤 상태나 조건이 발생할 때,
          사용자의 행동에 따라 스타일이 바뀌는 선택자

        - OOO:hover
            - 선택자 000 요소에 마우스 커서가 올라가 있는 동안 선택
        - OOO:active
            - 선택자 OOO 요소에 마우스를 클릭하고 있는 동안 선택
        - OOO:focus
            - 선택자 OOO 요소가 포커스 되면 선택
        - OOO:visited
            - 사용자가 이미 방문한 링크를 표시해줌
        - OOO:disabled
            - 비활성화된 요소를 나타냄
            - 요소를 비활성화시킴

    4) 가상 클래스 선택자
        - OOO: first-child
            - 선택자 OOO가 형제 요소 중 첫째라면 선택
        - OOO: last-child
            - 선택자 OOO가 형제 요소 중 막내라면 선택
        - OOO: nth-child(n)
            - 선택자 OOO가 형제 요소 중 (n)번째라면 선택
            - n 키워드 사용 시 0부터 해석 (zero-based Numbering)
            - nth-child(n+3)
                - 3번째 요소부터 이후 요소들을 선택

6. 가상 요소 선택자 (Pseudo-Elements)
        - OOO::before
            - 선택자 OOO요소의 내부 앞에 내용(content)을 삽입
            - 인라인(글자) 요소
        - OOO::after
            - 선택자 OOO요소의 내부 뒤에 내용(content)을 삽입

7. 속성 선택자 (Attribute)
        - [OOO] 
            - 속성 OOO을 포함한 요소 선택
        - [type="XXX"]
            - 속성 OOO을 포함하고 값이 XXX인 요소 선택