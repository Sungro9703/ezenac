1. 독자적인 사용자 인터페이스 컨트롤 사용
    1) 버튼, 리스트, 스크롤 바, 체크 박스, 메뉴, 대화 상자 ...

2. 뷰와 뷰그룹
    1) View 클래스
        - 안드로이드 화면에서 실제로 사용하는 것들은 모두 View 클래스 상속 받음
        - '컨트롤' 또는 '위젯'이라고도 함
            - 예) 화면에서 버튼 (버튼 위젯) / 실제 코드에서 버튼 (버튼 클래스)
        - UI를 구성하는 기초적인 빌딩 블록
    2) ViewGroup 클래스로
        - 다른 위젯을 담을 수 있는 위젯
        - 컨테이너 기능을 하며 레이아웃이라고도 함
            - 정해진 정책에 따라 뷰 배치
        - 레이아웃은 ViewGroup 클래스 아래 존재
        - 레이아웃도 크게 보면 위젯에 포함
    3) XML 속성
        - id 속성
            - 뷰의 식별자
            - java 코드에서 위젯에 접근할 때 id 속성에 지정한 아이디 사용
        - 화면에 보이기 속성
            - visible (0) : 디폴트 값
            - invisible (1) : 표시되지 않음. 하지만 배치에서 공간을 차지
            - gone (2) : 완전히 숨겨짐
        - padding 
            -뷰의 경계와 뷰의 내용물 사이의 간격
        - margin
            - 자식 뷰 주위의 여백

3. 이벤트 처리
    1) 이벤트 처리 객체를 생성하여 컴포넌트에 등록
    2) 뷰 클래스의 이벤트 처리 메소드를 재정의
        - 예) 버튼에 붙은 리스너 객체가 이벤트를 처리
    
    3)  이벤트 리스너               콜백 메서드             설명
        ------------------------------------------------------------------------------
        View.OnClickListener       onClick()              사용자가 클릭하면 호출    
        View.OnKeyListener         onKey()                키를 눌렀다가 놓았을 때 호출
        View.OnTouchListener       onTouch()              터치 이벤트 동작을 한 경우 호출

4. 레이아웃
    1) 뷰들을 화면에 배치하는 방법
        - 뷰들의 위치와 크기 결정
    2) 종류
        - LinearLayout : 자식들을 수직이나 수평으로 배치
        - TableLayout : 자식들을 테이블 형태로 배치
            - 자식 뷰들을 테이블 형태로 배치
            - 하나의 테이블은 여러개의 TableRow 객체로 이루어짐
                - TableRow 안에는 여러개의 셀들이 들어감
        - GridLayout : 바둑판 모양으로 배치
        - RelativeLayout: 부모나 다른 자식에 상대적으로 배치
        - Framework: 자식 뷰들은 등장하는 순서대로 화면에 표시
            - 이전에 추가된 자식위에 새로운 자식이 중첩됨
        - ...

5. 위젯(뷰)
    1) 라디오 버튼
    2) 토글 버튼
    3) 레이팅 바 (RatingBar)
    4) 날짜/시간 관련 위젯
        - 크로노미터(chronometer)
            - 타이머 형식 위젯
            - 일반적으로 시간 측정할 때 사용
        - 타임피커(TimePicker)
            - 시간 표시, 조절
        - 캘린더뷰(CalenderView)
            - 날짜 표시, 조절
    5) 뷰플리퍼(ViewFliprer)
        - 안에 여러개의 위젯을 배치한 후,
          필요에 따라 화면을 왼쪽과 오른쪽으로 밀어
          하나의 위젯 씩 화면에 보여주는 방식의 뷰 컨테이너
    6) 탭호스트(TabHost)
        - 여러 탭을 두고 각 탭을 클릭할 때마다 해당 화면이 나오도록 설정하는 뷰 컨테이너
        - 탭호스트, 탭위젯, 프레임레이아웃
            - 지정된 id를 변경하지 않아야 안드로이드가 탭호스트 구성임을 인식
        - 탭스펙(TabSpec)
            - 탭을 구성하는 요서들의 집합

    7) 웹뷰 (WebView)
        - 사용자가 웹브라우저 기능을 앱안에 포함시킬 수 있는 위젯
    

6. 터치 이벤트 처리
    1) 재정의할 수 있는 콜백 메소드
        - onKeyDown(int, KeyEvent)
          onKeyUp(int, KeyEvent)
          onTouchEvent(MotionEvent) : 사용자가 터치했을 때 호출
    2) 터치 액션의 종류
        - ACTION_DOWN
          ACTION_UP

7. 멀티 터치 이벤트 처리
    1) 여러개의 손가락을 이용해 화면 터치
    2) 이미지를 확대/축소할 때 사용
    3) 터치 이벤트
        - ACTION_DOWN : 첫 번째 포인터에 의한 터치는 인덱스 0번에 저장
          ACTION_POINTER_DOWN : 첫 번쨰 포인터 외의 포인터에 의해 발생
          ACTION_POINTER_UP : 다른 포인터가 화면에서 없어지면 발생
          ACTION_UP : 화면을 떠나는 마지막 포인터에 의해 발생
          ACTION_MOVE : 화면을 누르면서 이동할 때 
          